v0.7.3 (06/12/2023) :
    - Implmented function return in accumulator
    - Added support for & 0xff to extract lower byte of short

v0.7.2 (06/08/2023) :
    - Refactoring: Split huge generate.rs file into multiple source files
    - Added optimized implementation of 16 bits increment and decrement
    - Added optimization : removed first LDA followed by a second LDA  
    - Added optimization : removed LDA followed by STA with same mnemonic
    - Bug correction: avoided panic when inline function is not defined before use
    - Bug correction: removed optimization around JSR

v0.7.1 (06/05/2023) :
    - Bug correction : big bug in switch/case...
    - Bug correction : tmp was sometimes not released during 16-bits compare
    - Bug correction : registers out of zeropage are set to ramchip memory (instead of zeropage)
    - Corrected a bug: return Y didn't work 

v0.7.0 (06/02/2023) :
    - Changed interface to actually compute call tree (for linker) 

v0.6.0 (05/28/2023) :
    - Mark functions actually in use (for linker) 
    - Implemented 16-bis comparisons (partial)
    - Corrected a bug in 16-bits negation
    - Added function return values (in cctmp)
    - Added NMI interrupt routine support

v0.5.3 (5/25/2023) :
    - Moved processing of literal strings to preprocessor, in order to avoid troubles with comments inside strings

v0.5.2 (5/22/2023) :
    - Corrected a bug with mutiple string literals
    - Added missing cases for conditions on X or Y

v0.5.1 (5/15/2023) :
    - Added support for function macros without parameters
    - Solved an issue with for statement
    - Fixed ++/-- with 16 bits operations
    - Fixed -- prefix operator
    - Fixed sizeof operator
    - Added support for ternary expressions in declarations
    - Added quoted character support
    - Corrected a bug with carry flag
    - Added better support for immediate expression results 
    - Added int type (short int)

v0.5.0 (4/29/2023) :
    - Added -g debug flag

v0.4.1 (4/24/2023) :
    - Corrected a bug with splices processing under windows

v0.4.0 (4/24/2023) :
    - Changed out.a default output file name to classical a.out
    - Added -S option for assembler output only
    - Enhanced error reporting in case of syntax error in array definitions

v0.3.5 (4/16/2023) :
    - Shortened included C comments
    - Even better optimization for branching (added carry_flag_ok flag)

v0.3.4 (4/13/2023) :
    - Added better optimization for branching (to be fully tested)
    - Added better support for macros with parameters (accepts spaces after comma, substitutes words only)

v0.3.3 (4/6/2023) :
    - Removed strange MemoryOnChip flag in compile_var_decl for constants out of zeropage...
    - Added SuperGame bankswitching (for Atari 7800)
    - Added a default 3 bytes for inline asm (for code size estimation)

v0.3.2 (4/4/2023) :
    - Added screencode support for constant strings declarations
    - Added support for comma operator

v0.3.1 (4/3/2023) :
    - Added function size_bytes() to generated code
    - Checked scattering validity for atari 7800 (8 or 16 lines)

v0.3.0 (4/2/2023) :
    - Added "atari2600" and "atari7800" cargo features
    - Corrected missing acc in use flags
    - Corrected bug with respect to definition of multiple arrays on the same line

